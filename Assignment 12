//Write a program that asks the user for 2 positive integers, validates the input, and then prints out the GCD of those integers.
#include <iostream>
#include <ctime>
using namespace std;

int GCDBruteMethod(int num1, int num2);
int GCDEuclidianMethod(int num1, int num2);
int main()
{
	int num1;
	int num2;
	int gcd;
	clock_t start1 = 0;
	clock_t end1;
	double timeDuration1;
	clock_t start2 = 0;
	clock_t end2;
	double timeDuration2;

	cout << "Enter two positive numbers: ";
	cin >> num1;
	cin >> num2;
 
	do
	{ 
    	if (num1 < 0)
    	{
        	cout << "Enter a positive numbers: ";
        	cin >> num1;
    	}
    	else if (num2 < 0)
    	{
        	cout << "Enter a positive numbers: ";
        	cin >> num2;
    	}
	}while ((num1 < 0) || (num2 < 0));
	
	start1 = clock();	
	gcd = GCDBruteMethod(num1,num2);
	end1 = clock();
	cout << "The GCD of " << num1 << " and " << num2 << " is: " << gcd << endl;
	timeDuration1 = (end1 - start1 / (long) CLOCKS_PER_SEC);
	cout << "Time 1: " << timeDuration1 << endl;
	
	start2 = clock();
	gcd = GCDEuclidianMethod(num1,num2);
	end2 = clock();
	cout << "The GCD of " << num1 << " and " << num2 << " is: " << gcd << endl;
	timeDuration2 = (end2 - start2 / (long) CLOCKS_PER_SEC);
	cout << "Time 2: " << timeDuration2 << endl;	
	
	
	if (timeDuration1 < timeDuration2)
	{
	    cout << "Brute Method was faster" << endl;
	}
	else
	{
	  cout << "Euclidian Method was faster" << endl;
	}
}
int GCDBruteMethod(int num1, int num2)
{
	int gcd = 0;
   	if (num2 == 0)
	    return num1;
	else if (num1 == 0)
	    return num2;
	 
	for (int i = 1; i <= num1 && i <= num2; i++)
	{
    	if (num1 % i == 0 && num2 % i == 0)
    	{
            	gcd = i;
    	}
	}
	return gcd;
}
int GCDEuclidianMethod(int num1, int num2)
{
    if (num2 == 0)
 	    return num1;
	return GCDEuclidianMethod(num2,num1%num2);
}
